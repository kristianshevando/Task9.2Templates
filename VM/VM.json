{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string"
      },
      "adminPassword": {
        "type": "securestring",
      },
      "automationAccountKey": {
        "type": "securestring"
      },
      "automationAccountUrl": {
        "type": "securestring"
      }
    },
    "variables": {
      "vnet_name": "[concat('vnet_',resourceGroup().name)]",
      "vnet_pref": "10.10.0.0/16",
      "subnet_name": "KristianSubnet1",
      "subnet_pref": "10.10.0.0/24",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet_name'),  variables('subnet_name'))]",
      "vm_pref": "KristianVM",
      "res_count": 2,
      "dnsPrefixForPublicIP": "[uniqueString(resourceGroup().id)]",
      "configurationMode": "ApplyAndMonitor",
      "nodeConfigurationName": "",
      "configurationModeFrequencyMins": 15,
      "refreshFrequencyMins": 30,
      "rebootNodeIfNeeded": true,
      "actionAfterReboot": "ContinueConfiguration",
      "allowModuleOverwrite": false,
      "timestamp": "MM/dd/yyyy H:mm:ss tt"
    },
    "resources": [
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(variables('vm_pref'), copyIndex(1))]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "PIPCopy",
          "count": "[variables('res_count')]"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat(variables('dnsPrefixForPublicIP'), copyIndex(1))]"
          }
        }
      },
      {
        "name": "[variables('vnet_name')]",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "dependsOn": [],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('vnet_pref')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnet_name')]",
              "properties": {
                "addressPrefix": "[variables('subnet_pref')]"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vm_pref'), copyIndex(1))]",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "NICCopy",
          "count": "[variables('res_count')]"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vm_pref'), copyIndex(1)))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ],
          "dnsSettings": {
            "dnsServers": []
          },
          "enableIPForwarding": false
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vm_pref'), copyIndex(1)))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet_name'))]"
        ]
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(variables('vm_pref'), copyIndex(1))]",
        "apiVersion": "2017-03-30",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "VMcopy",
          "count": "[variables('res_count')]"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2012-R2-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(variables('vm_pref'),copyIndex(1))]",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "caching": "ReadWrite"
            }
          },
          "osProfile": {
            "computerName": "[concat(variables('vm_pref'),copyIndex(1))]",
            "adminUsername": "[parameters('adminUsername')]",
            "windowsConfiguration": {
              "provisionVMAgent": true
            },
            "secrets": [],
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vm_pref'), copyIndex(1)))]"
              }
            ]
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vm_pref'), copyIndex(1)))]"
        ]
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vm_pref'), copyIndex(1),'/Microsoft.Powershell.DSC')]",
        "copy": {
          "name": "DSCcopy",
          "count": "[variables('res_count')]"
        },
        "dependsOn": [
          "[concat(variables('vm_pref'), copyIndex(1))]"
        ],
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.19",
          "autoUpgradeMinorVersion": true,
          "protectedSettings": {
            "Items": {
              "registrationKeyPrivate": "[parameters('automationAccountKey')]"
            }
          },
          "settings": {
            "ConfigurationFunction": "",
            "Properties": [
              {
                "Name": "RegistrationKey",
                "Value": {
                  "UserName": "PLACEHOLDER_DONOTUSE",
                  "Password": "PrivateSettingsRef:registrationKeyPrivate"
                },
                "TypeName": "System.Management.Automation.PSCredential"
              },
              {
                "Name": "RegistrationUrl",
                "Value": "[parameters('automationAccountUrl')]",
                "TypeName": "System.String"
              },
              {
                "Name": "NodeConfigurationName",
                "Value": "[variables('nodeConfigurationName')]",
                "TypeName": "System.String"
              },
              {
                "Name": "ConfigurationMode",
                "Value": "[variables('configurationMode')]",
                "TypeName": "System.String"
              },
              {
                "Name": "ConfigurationModeFrequencyMins",
                "Value": "[variables('configurationModeFrequencyMins')]",
                "TypeName": "System.Int32"
              },
              {
                "Name": "RefreshFrequencyMins",
                "Value": "[variables('refreshFrequencyMins')]",
                "TypeName": "System.Int32"
              },
              {
                "Name": "RebootNodeIfNeeded",
                "Value": "[variables('rebootNodeIfNeeded')]",
                "TypeName": "System.Boolean"
              },
              {
                "Name": "ActionAfterReboot",
                "Value": "[variables('actionAfterReboot')]",
                "TypeName": "System.String"
              },
              {
                "Name": "AllowModuleOverwrite",
                "Value": "[variables('allowModuleOverwrite')]",
                "TypeName": "System.Boolean"
              },
              {
                "Name": "Timestamp",
                "Value": "[variables('timestamp')]",
                "TypeName": "System.String"
              }
            ]
          }
        }
      }
    ]
  }